//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.1433
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace xFarmFrenzy.Isui {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Isuibinding", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TUserModuleRight))]
    public partial class Isuiservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServiceInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoByLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIDServicesByModuleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIDServicesByModuleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIDUsersByIDServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUsersInfoByModuleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserModuleRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxIDRightByResOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIPByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNameByIPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Isuiservice() {
            this.Url = global::xFarmFrenzy.Properties.Settings.Default.xFarmFrenzy_Isui_Isuiservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event getUserInfoByIDCompletedEventHandler getUserInfoByIDCompleted;
        
        /// <remarks/>
        public event getServiceInfoByIDCompletedEventHandler getServiceInfoByIDCompleted;
        
        /// <remarks/>
        public event getUserInfoByLoginCompletedEventHandler getUserInfoByLoginCompleted;
        
        /// <remarks/>
        public event getIDServicesByModuleNameCompletedEventHandler getIDServicesByModuleNameCompleted;
        
        /// <remarks/>
        public event getIDServicesByModuleIDCompletedEventHandler getIDServicesByModuleIDCompleted;
        
        /// <remarks/>
        public event getIDUsersByIDServiceCompletedEventHandler getIDUsersByIDServiceCompleted;
        
        /// <remarks/>
        public event getUsersInfoByModuleNameCompletedEventHandler getUsersInfoByModuleNameCompleted;
        
        /// <remarks/>
        public event getRightCompletedEventHandler getRightCompleted;
        
        /// <remarks/>
        public event GetUserModuleRightCompletedEventHandler GetUserModuleRightCompleted;
        
        /// <remarks/>
        public event GetMaxIDRightByResCompletedEventHandler GetMaxIDRightByResCompleted;
        
        /// <remarks/>
        public event getIPByNameCompletedEventHandler getIPByNameCompleted;
        
        /// <remarks/>
        public event getNameByIPCompletedEventHandler getNameByIPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#login", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool login(string uName, string passwd) {
            object[] results = this.Invoke("login", new object[] {
                        uName,
                        passwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string uName, string passwd) {
            this.loginAsync(uName, passwd, null);
        }
        
        /// <remarks/>
        public void loginAsync(string uName, string passwd, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        uName,
                        passwd}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getUserInfoByID", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TUserInfo getUserInfoByID(int id) {
            object[] results = this.Invoke("getUserInfoByID", new object[] {
                        id});
            return ((TUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoByIDAsync(int id) {
            this.getUserInfoByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getUserInfoByIDAsync(int id, object userState) {
            if ((this.getUserInfoByIDOperationCompleted == null)) {
                this.getUserInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoByIDOperationCompleted);
            }
            this.InvokeAsync("getUserInfoByID", new object[] {
                        id}, this.getUserInfoByIDOperationCompleted, userState);
        }
        
        private void OngetUserInfoByIDOperationCompleted(object arg) {
            if ((this.getUserInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoByIDCompleted(this, new getUserInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getServiceInfoByID", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TServiceInfo getServiceInfoByID(int id) {
            object[] results = this.Invoke("getServiceInfoByID", new object[] {
                        id});
            return ((TServiceInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getServiceInfoByIDAsync(int id) {
            this.getServiceInfoByIDAsync(id, null);
        }
        
        /// <remarks/>
        public void getServiceInfoByIDAsync(int id, object userState) {
            if ((this.getServiceInfoByIDOperationCompleted == null)) {
                this.getServiceInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServiceInfoByIDOperationCompleted);
            }
            this.InvokeAsync("getServiceInfoByID", new object[] {
                        id}, this.getServiceInfoByIDOperationCompleted, userState);
        }
        
        private void OngetServiceInfoByIDOperationCompleted(object arg) {
            if ((this.getServiceInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServiceInfoByIDCompleted(this, new getServiceInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getUserInfoByLogin", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TUserInfo getUserInfoByLogin([System.Xml.Serialization.SoapElementAttribute("login")] string login1) {
            object[] results = this.Invoke("getUserInfoByLogin", new object[] {
                        login1});
            return ((TUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoByLoginAsync(string login1) {
            this.getUserInfoByLoginAsync(login1, null);
        }
        
        /// <remarks/>
        public void getUserInfoByLoginAsync(string login1, object userState) {
            if ((this.getUserInfoByLoginOperationCompleted == null)) {
                this.getUserInfoByLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoByLoginOperationCompleted);
            }
            this.InvokeAsync("getUserInfoByLogin", new object[] {
                        login1}, this.getUserInfoByLoginOperationCompleted, userState);
        }
        
        private void OngetUserInfoByLoginOperationCompleted(object arg) {
            if ((this.getUserInfoByLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoByLoginCompleted(this, new getUserInfoByLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getIDServicesByModuleName", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int[] getIDServicesByModuleName(string module) {
            object[] results = this.Invoke("getIDServicesByModuleName", new object[] {
                        module});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getIDServicesByModuleNameAsync(string module) {
            this.getIDServicesByModuleNameAsync(module, null);
        }
        
        /// <remarks/>
        public void getIDServicesByModuleNameAsync(string module, object userState) {
            if ((this.getIDServicesByModuleNameOperationCompleted == null)) {
                this.getIDServicesByModuleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIDServicesByModuleNameOperationCompleted);
            }
            this.InvokeAsync("getIDServicesByModuleName", new object[] {
                        module}, this.getIDServicesByModuleNameOperationCompleted, userState);
        }
        
        private void OngetIDServicesByModuleNameOperationCompleted(object arg) {
            if ((this.getIDServicesByModuleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIDServicesByModuleNameCompleted(this, new getIDServicesByModuleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getIDServicesByModuleID", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int[] getIDServicesByModuleID(int moduleID) {
            object[] results = this.Invoke("getIDServicesByModuleID", new object[] {
                        moduleID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getIDServicesByModuleIDAsync(int moduleID) {
            this.getIDServicesByModuleIDAsync(moduleID, null);
        }
        
        /// <remarks/>
        public void getIDServicesByModuleIDAsync(int moduleID, object userState) {
            if ((this.getIDServicesByModuleIDOperationCompleted == null)) {
                this.getIDServicesByModuleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIDServicesByModuleIDOperationCompleted);
            }
            this.InvokeAsync("getIDServicesByModuleID", new object[] {
                        moduleID}, this.getIDServicesByModuleIDOperationCompleted, userState);
        }
        
        private void OngetIDServicesByModuleIDOperationCompleted(object arg) {
            if ((this.getIDServicesByModuleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIDServicesByModuleIDCompleted(this, new getIDServicesByModuleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getIDUsersByIDService", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int[] getIDUsersByIDService(int idRes, int idRight) {
            object[] results = this.Invoke("getIDUsersByIDService", new object[] {
                        idRes,
                        idRight});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getIDUsersByIDServiceAsync(int idRes, int idRight) {
            this.getIDUsersByIDServiceAsync(idRes, idRight, null);
        }
        
        /// <remarks/>
        public void getIDUsersByIDServiceAsync(int idRes, int idRight, object userState) {
            if ((this.getIDUsersByIDServiceOperationCompleted == null)) {
                this.getIDUsersByIDServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIDUsersByIDServiceOperationCompleted);
            }
            this.InvokeAsync("getIDUsersByIDService", new object[] {
                        idRes,
                        idRight}, this.getIDUsersByIDServiceOperationCompleted, userState);
        }
        
        private void OngetIDUsersByIDServiceOperationCompleted(object arg) {
            if ((this.getIDUsersByIDServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIDUsersByIDServiceCompleted(this, new getIDUsersByIDServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getUsersInfoByModuleName", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TUserInfo[] getUsersInfoByModuleName(string module, int idRight) {
            object[] results = this.Invoke("getUsersInfoByModuleName", new object[] {
                        module,
                        idRight});
            return ((TUserInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void getUsersInfoByModuleNameAsync(string module, int idRight) {
            this.getUsersInfoByModuleNameAsync(module, idRight, null);
        }
        
        /// <remarks/>
        public void getUsersInfoByModuleNameAsync(string module, int idRight, object userState) {
            if ((this.getUsersInfoByModuleNameOperationCompleted == null)) {
                this.getUsersInfoByModuleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsersInfoByModuleNameOperationCompleted);
            }
            this.InvokeAsync("getUsersInfoByModuleName", new object[] {
                        module,
                        idRight}, this.getUsersInfoByModuleNameOperationCompleted, userState);
        }
        
        private void OngetUsersInfoByModuleNameOperationCompleted(object arg) {
            if ((this.getUsersInfoByModuleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsersInfoByModuleNameCompleted(this, new getUsersInfoByModuleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getRight", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int getRight(int userID, int resID) {
            object[] results = this.Invoke("getRight", new object[] {
                        userID,
                        resID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getRightAsync(int userID, int resID) {
            this.getRightAsync(userID, resID, null);
        }
        
        /// <remarks/>
        public void getRightAsync(int userID, int resID, object userState) {
            if ((this.getRightOperationCompleted == null)) {
                this.getRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRightOperationCompleted);
            }
            this.InvokeAsync("getRight", new object[] {
                        userID,
                        resID}, this.getRightOperationCompleted, userState);
        }
        
        private void OngetRightOperationCompleted(object arg) {
            if ((this.getRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRightCompleted(this, new getRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#GetUserModuleRight", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public TUserModuleRight[] GetUserModuleRight([System.Xml.Serialization.SoapElementAttribute("login")] string login1, string moduleName) {
            object[] results = this.Invoke("GetUserModuleRight", new object[] {
                        login1,
                        moduleName});
            return ((TUserModuleRight[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserModuleRightAsync(string login1, string moduleName) {
            this.GetUserModuleRightAsync(login1, moduleName, null);
        }
        
        /// <remarks/>
        public void GetUserModuleRightAsync(string login1, string moduleName, object userState) {
            if ((this.GetUserModuleRightOperationCompleted == null)) {
                this.GetUserModuleRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserModuleRightOperationCompleted);
            }
            this.InvokeAsync("GetUserModuleRight", new object[] {
                        login1,
                        moduleName}, this.GetUserModuleRightOperationCompleted, userState);
        }
        
        private void OnGetUserModuleRightOperationCompleted(object arg) {
            if ((this.GetUserModuleRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserModuleRightCompleted(this, new GetUserModuleRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#GetMaxIDRightByRes", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int GetMaxIDRightByRes(int moduleID, [System.Xml.Serialization.SoapElementAttribute("login")] string login1, string param1, string param2, string res) {
            object[] results = this.Invoke("GetMaxIDRightByRes", new object[] {
                        moduleID,
                        login1,
                        param1,
                        param2,
                        res});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxIDRightByResAsync(int moduleID, string login1, string param1, string param2, string res) {
            this.GetMaxIDRightByResAsync(moduleID, login1, param1, param2, res, null);
        }
        
        /// <remarks/>
        public void GetMaxIDRightByResAsync(int moduleID, string login1, string param1, string param2, string res, object userState) {
            if ((this.GetMaxIDRightByResOperationCompleted == null)) {
                this.GetMaxIDRightByResOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxIDRightByResOperationCompleted);
            }
            this.InvokeAsync("GetMaxIDRightByRes", new object[] {
                        moduleID,
                        login1,
                        param1,
                        param2,
                        res}, this.GetMaxIDRightByResOperationCompleted, userState);
        }
        
        private void OnGetMaxIDRightByResOperationCompleted(object arg) {
            if ((this.GetMaxIDRightByResCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxIDRightByResCompleted(this, new GetMaxIDRightByResCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getIPByName", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getIPByName(string hostName) {
            object[] results = this.Invoke("getIPByName", new object[] {
                        hostName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getIPByNameAsync(string hostName) {
            this.getIPByNameAsync(hostName, null);
        }
        
        /// <remarks/>
        public void getIPByNameAsync(string hostName, object userState) {
            if ((this.getIPByNameOperationCompleted == null)) {
                this.getIPByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIPByNameOperationCompleted);
            }
            this.InvokeAsync("getIPByName", new object[] {
                        hostName}, this.getIPByNameOperationCompleted, userState);
        }
        
        private void OngetIPByNameOperationCompleted(object arg) {
            if ((this.getIPByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIPByNameCompleted(this, new getIPByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:suiIntf-Isui#getNameByIP", RequestNamespace="urn:suiIntf-Isui", ResponseNamespace="urn:suiIntf-Isui")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getNameByIP(string IPaddr) {
            object[] results = this.Invoke("getNameByIP", new object[] {
                        IPaddr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNameByIPAsync(string IPaddr) {
            this.getNameByIPAsync(IPaddr, null);
        }
        
        /// <remarks/>
        public void getNameByIPAsync(string IPaddr, object userState) {
            if ((this.getNameByIPOperationCompleted == null)) {
                this.getNameByIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNameByIPOperationCompleted);
            }
            this.InvokeAsync("getNameByIP", new object[] {
                        IPaddr}, this.getNameByIPOperationCompleted, userState);
        }
        
        private void OngetNameByIPOperationCompleted(object arg) {
            if ((this.getNameByIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNameByIPCompleted(this, new getNameByIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:uUIData")]
    public partial class TUserInfo {
        
        private int idField;
        
        private string loginField;
        
        private string fioField;
        
        private byte[] fioBField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Fio {
            get {
                return this.fioField;
            }
            set {
                this.fioField = value;
            }
        }
        
        /// <remarks/>
        public byte[] FioB {
            get {
                return this.fioBField;
            }
            set {
                this.fioBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:uUIData")]
    public partial class TUserModuleRight {
        
        private int idServiceField;
        
        private int idRightField;
        
        /// <remarks/>
        public int IdService {
            get {
                return this.idServiceField;
            }
            set {
                this.idServiceField = value;
            }
        }
        
        /// <remarks/>
        public int IdRight {
            get {
                return this.idRightField;
            }
            set {
                this.idRightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:uUIData")]
    public partial class TServiceInfo {
        
        private int idField;
        
        private int idModuleField;
        
        private string nameField;
        
        private string param1Field;
        
        private string param2Field;
        
        private string resField;
        
        private byte[] nameBField;
        
        private byte[] param1BField;
        
        private byte[] param2BField;
        
        private byte[] resBField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int IdModule {
            get {
                return this.idModuleField;
            }
            set {
                this.idModuleField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Param1 {
            get {
                return this.param1Field;
            }
            set {
                this.param1Field = value;
            }
        }
        
        /// <remarks/>
        public string Param2 {
            get {
                return this.param2Field;
            }
            set {
                this.param2Field = value;
            }
        }
        
        /// <remarks/>
        public string Res {
            get {
                return this.resField;
            }
            set {
                this.resField = value;
            }
        }
        
        /// <remarks/>
        public byte[] NameB {
            get {
                return this.nameBField;
            }
            set {
                this.nameBField = value;
            }
        }
        
        /// <remarks/>
        public byte[] Param1B {
            get {
                return this.param1BField;
            }
            set {
                this.param1BField = value;
            }
        }
        
        /// <remarks/>
        public byte[] Param2B {
            get {
                return this.param2BField;
            }
            set {
                this.param2BField = value;
            }
        }
        
        /// <remarks/>
        public byte[] ResB {
            get {
                return this.resBField;
            }
            set {
                this.resBField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getUserInfoByIDCompletedEventHandler(object sender, getUserInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TUserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TUserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getServiceInfoByIDCompletedEventHandler(object sender, getServiceInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServiceInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServiceInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TServiceInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TServiceInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getUserInfoByLoginCompletedEventHandler(object sender, getUserInfoByLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TUserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TUserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getIDServicesByModuleNameCompletedEventHandler(object sender, getIDServicesByModuleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIDServicesByModuleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIDServicesByModuleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getIDServicesByModuleIDCompletedEventHandler(object sender, getIDServicesByModuleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIDServicesByModuleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIDServicesByModuleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getIDUsersByIDServiceCompletedEventHandler(object sender, getIDUsersByIDServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIDUsersByIDServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIDUsersByIDServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getUsersInfoByModuleNameCompletedEventHandler(object sender, getUsersInfoByModuleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsersInfoByModuleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUsersInfoByModuleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TUserInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TUserInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getRightCompletedEventHandler(object sender, getRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUserModuleRightCompletedEventHandler(object sender, GetUserModuleRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserModuleRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserModuleRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TUserModuleRight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TUserModuleRight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetMaxIDRightByResCompletedEventHandler(object sender, GetMaxIDRightByResCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxIDRightByResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxIDRightByResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getIPByNameCompletedEventHandler(object sender, getIPByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIPByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIPByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getNameByIPCompletedEventHandler(object sender, getNameByIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNameByIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNameByIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591